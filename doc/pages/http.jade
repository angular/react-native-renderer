extends _layout

block content
    div(style="float: right;")
        a(href='https://github.com/angular/react-native-renderer/blob/master/doc/pages/http.jade') Edit this page on Github

    :marked
        # Http

        The http module of Angular 2 can be used as is in applications.
        The only thing to be done is to bootstrap the application with the right providers (see below).

        Behind the scene, it uses the [Network polyfill](https://facebook.github.io/react-native/docs/network.html) provided by React Native.

        ## bootstrap
        ```
        import {bootstrapReactNative, HTTP_PROVIDERS}
            from 'angular2-react-native';
        import {Example} from "./example";

        bootstrapReactNative('example', Example, [HTTP_PROVIDERS]);
        ```

        ## Example
        ```
        import {Component, ViewChild} from 'angular2/core';
        import {NgFor} from 'angular2/common';
        import {Http} from 'angular2/http';
        import 'rxjs/add/operator/map';
        import {TextInput} from 'angular2-react-native';

        @Component({
          selector: 'example',
          directives: [NgFor],
          template: `
        <TextInput placeholder="Search Wikipedia" (submit)="sendXHR($event)"></TextInput>
        <Text *ngFor="let page of pages">{{page}}</Text>
        `
        })
        export class Example {
          @ViewChild(TextInput) textInput: TextInput;
          pages: Array<any> = [];
          constructor(private http: Http) {}

          sendXHR(text: string) {
            if (text && text.length > 0) {
              this.http.get('https://en.wikipedia.org/w/api.php?format=json&action=query&generator=allpages&gaplimit=10&gapfrom=' + text)
                .map(res => res.json())
                .subscribe(data => {
                  this.pages = [];
                  var raw = data['query'].pages;
                  for (var key in raw) {
                    this.pages.push(raw[key].title);
                  }
                });
              this.textInput.blurTextInput();
            }
          }

        }
        ```